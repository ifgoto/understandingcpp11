#include <iostream>
#include <cstring>

using namespace std;
 
#define assert_static(e) \
    do { \
        enum { assert_static__ = 1/(e)}; \
    } while (0)


////it's hard to debug by the info generated by this way, '
//
// template <typename T, typename U> int bit_copy(T& a, U& b) {
//     assert_static(sizeof(b) == sizeof(a));
//     memcpy(&a, &b, sizeof(b));
// }





//------------------------------------------------------------


//use the static_assert was good to debug while compile
template <typename T, typename U> int bit_copy(T& a, U& b) {
    static_assert(sizeof(b) == sizeof(a),
     "the paramters of bit_copy must have same width");
    memcpy(&a, &b, sizeof(b));
}
//output

/*
g++ -o 2-5-4 -g -std=c++11 2-5-4.cpp
2-5-4.cpp: In instantiation of ‘int bit_copy(T&, U&) [with T = int; U = double]’:
2-5-4.cpp:30:17:   required from here
2-5-4.cpp:22:5: error: static assertion failed: the paramters of bit_copy must have same width
     static_assert(sizeof(b) == sizeof(a),
     ^
make: *** [2-5-4] Error 1

*/

int main(){
    int a = 0x2468;
    double b;
    bit_copy(a,b);
}
